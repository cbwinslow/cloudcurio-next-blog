name: Code Coverage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  coverage:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup PostgreSQL
        run: |
          sudo apt-get install -y postgresql-client
          psql -h localhost -U postgres -c "CREATE DATABASE test;"
          psql -h localhost -U postgres -c "CREATE USER test WITH PASSWORD 'test';"
          psql -h localhost -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE test TO test;"

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          TEST_DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          TEST_DATABASE_URL: postgresql://test:test@localhost:5432/test
          NEXTAUTH_SECRET: test-secret
          GITHUB_ID: test-github-id
          GITHUB_SECRET: test-github-secret
          NEXT_PUBLIC_APP_URL: http://localhost:3000

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false