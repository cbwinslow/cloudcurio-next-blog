name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm ci

      - name: Setup PostgreSQL
        run: |
          sudo apt-get install -y postgresql-client
          psql -h localhost -U postgres -c "CREATE DATABASE test;"
          psql -h localhost -U postgres -c "CREATE USER test WITH PASSWORD 'test';"
          psql -h localhost -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE test TO test;"

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          TEST_DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Run linting
        run: npx eslint . --ext .ts,.tsx

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Run Node.js tests
        run: npm run test
        env:
          TEST_DATABASE_URL: postgresql://test:test@localhost:5432/test
          NEXTAUTH_SECRET: test-secret
          GITHUB_ID: test-github-id
          GITHUB_SECRET: test-github-secret
          NEXT_PUBLIC_APP_URL: http://localhost:3000

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          cd worker
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Run Python worker tests
        run: |
          cd worker
          python -m pytest tests/ -v

      - name: Build application
        run: npm run build